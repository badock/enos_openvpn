
- name: Installing docker
  shell: (curl -sSL https://get.docker.com/ | sh; touch docker.txt)
  args:
    creates: docker.txt


- name: Installing dependencies
  apt:
    name: "{{ item }}"
    state: present
    # update_cache: yes
  with_items:
    - python
    - python-dev
    - git
    - python-pip
    - python3-pip


- name:
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - /tmp/docker/volumes
    - /var/lib/docker/volumes
    - /tmp/nova
    - /var/lib/nova
  when: g5k


- name: Bindmounting docker
  mount:
    path: /tmp/docker/volumes
    src: /var/lib/docker/volumes
    opts: bind
    fstype: none
    state: mounted
  when: g5k


- name: Bindmounting nova
  mount:
    path: /tmp/nova
    src: /var/lib/nova
    opts: bind
    fstype: none
    state: mounted
  when: g5k


- name: Getting enos
  pip:
    name: git+https://github.com/marie-donnie/enos.git@limit#egg=enos
    editable: true
    executable: pip3
    # extra_args: "--target {{ enos_dir }}"
  when:
    - inventory_hostname == openvpn_node
    - not action_type


- name: Generates ssh key if not present
  local_action:
    module: command ssh-keygen -b 4096 -q -t rsa -f '{{ exec_dir }}/current/ssh' -C '' -N ''
    args:
      creates: '{{ exec_dir }}/current/ssh'
  run_once: true
  when: (inventory_hostname == openvpn_node and not action_type) or inventory_hostname in other_nodes

- name: Copy the private ssh key to control
  copy:
    src: "{{ exec_dir }}/current/ssh"
    dest: /root/.ssh/ssh
    mode: u+rw,g-rwx,o-rwx
  when: (inventory_hostname == openvpn_node and not action_type) or inventory_hostname in other_nodes


- name: Copy the public ssh key to hosts
  copy:
    src: "{{ exec_dir }}/current/ssh.pub"
    dest: /root/.ssh/ssh.pub
  when: (inventory_hostname == openvpn_node and not action_type) or inventory_hostname in other_nodes


- name: Adding the key to authorized keys
  shell: "cat /root/.ssh/ssh.pub >> .ssh/authorized_keys"
  when: (inventory_hostname == openvpn_node and not action_type) or inventory_hostname in other_nodes


  # WHEN RUNNING FIRST TIME (not adding a node)

- name: Copy ansible config file
  copy:
    src: ansible.cfg
    dest: /root/ansible.cfg
  when:
    - inventory_hostname == openvpn_node
    - not action_type


- name: Adding reservation file
  copy:
    src: "{{ exec_dir }}/reservation.yaml"
    dest: reservation.yaml
  when:
    - inventory_hostname == openvpn_node
    - not action_type


- name: Executing enos
  shell: "enos deploy > /tmp/enos.logs"
  when:
    - inventory_hostname == openvpn_node
    - not action_type

- stat:
    path: current/multinode
  register: multinode
  when:
    - inventory_hostname == openvpn_node
    - not action_type

- debug:
    msg: "Found multinode file"
  when:
    - inventory_hostname == openvpn_node
    - not action_type
    - multinode.stat.exists


- name: Fetch multinode file
  fetch:
    src: current/multinode
    dest: "{{ exec_dir }}/current/multinode"
    flat: yes
  when:
    - inventory_hostname == openvpn_node
    - not action_type
    - multinode.stat.exists

    # ACTION

- name: Adding reservation file
  copy:
    src: "{{ exec_dir }}/current/reservation.yaml"
    dest: reservation.yaml
  when:
    - inventory_hostname == openvpn_node
    - action_type


- name: Copy multinode file
  copy:
    src: "{{ exec_dir }}/current/multinode"
    dest: "{{ enos_dir}}/enos/enos/inventories/multinode"
  when:
    - inventory_hostname == openvpn_node
    - action_type


    # ADDITION

- name: Executing enos up limited
  shell: "enos up --limit > /tmp/enos.logs"
  when:
    - inventory_hostname == openvpn_node
    - action_type == 'add'


- name: Executing kolla deploy limited
  shell: "enos kolla -- deploy --limit {{ alias }} > /tmp/enos.logs"
  when:
    - inventory_hostname == openvpn_node
    - action_type == 'add'

    # STOP

- name: Executing kolla stop limited
  shell: "enos kolla -- stop --limit {{ alias }} > /tmp/enos.logs"
  when:
    - inventory_hostname == openvpn_node
    - action_type == 'remove'

    # REJOIN

- name: Executing kolla deploy limited
  shell: "enos kolla -- deploy --limit {{ alias }} > /tmp/enos.logs"
  when:
    - inventory_hostname == openvpn_node
    - action_type == 'rejoin'
